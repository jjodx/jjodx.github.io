p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE)){
file.copy(from = file.path(overwrite = recursive), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = FALSE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE)){
file.copy(from = file.path(overwrite = recursive), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = recursive, recursive = FALSE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE)){
file.copy(from = file.path(overwrite = recursive), to = file.path(p2, paste0(c(b,".pdf"),collapse="")))
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE)){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = FALSE)
}else{
print(paste0(p3,split_a[1]))
}
}
warnings
warnings()
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
#bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
bib_df[1,]$AUTHOR[[1]]
bib_df[1,]$AUTHOR
bib_df<-bib2df(file="MyPub.bib")
bib_df[1,]$AUTHOR[[1]]
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "[{\\`{e}}]", "è")
bib_df[1,]$AUTHOR[[1]]
bib_df<-bib2df(file="MyPub.bib")
bib_df[1,]$AUTHOR[[1]]
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "[{\`{e}}]", "è")
bib_df[1,]$AUTHOR[[1]]
bib_df<-bib2df(file="MyPub.bib")
?stri_replace_all_regex
bib_df<-bib2df(file="MyPub.bib")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "{\\\`{e}}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "{\\`{e}}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "\\{\\\\\\\\`{e}}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]], "\{\\\\\`\{e\}\}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\{\\\\\`\{e\}\}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\{\\\\\`\{e\}\}","è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\{\\\\\`\{e\}\}","è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\\\\\`\{e\}\}","è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\}\}","è")
bib_df$AUTHOR[[1]]
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],e, "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"e", "è")
bib_df$AUTHOR[[1]]
bib_df<-bib2df(file="MyPub.bib")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\{\\\\\`\{e\}\}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"/\{\\\\\`\{e\}\}/g", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\\{\\\\\`\{e\}\}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\\{\\\\\`\\{e\}\}", "è")
bib_df$AUTHOR[[1]]<-stri_replace_all_regex(bib_df$AUTHOR[[1]],"\\{\\\\\`\\{e\\}\\}", "è")
bib_df$AUTHOR[[1]]
bib_df[]$AUTHOR[[1]]
bib_df[40]$AUTHOR[[1]]
bib_df[35]$AUTHOR[[1]]
bib_df[33]$AUTHOR[[1]]
bib_df[33]$AUTHORS[[1]]
bib_df<-bib2df(file="MyPub.bib")
bib_df$AUTHOR
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"Orban de Xivry\\}, Jean-Jacques", "\_\_Orban de Xivry, Jean-Jacques\_\_")## replacing late
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry, Jean-Jacques\\_\\_")## replacing latex character by UTF character
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry, Jean-Jacques\\_\\_")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
bib_df$FILE
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\“", "-")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
PDF1 = c("Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
PDF1 = c("Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont.PDF")
F1 = c("Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
strcmp(PDF1,F1)
PDF1==F1
for k=1 to length(PDF1){
print(k)
PDF1[1:k]==F1[1:k]
}
for k in 1:length(PDF1){
print(k)
PDF1[1:k]==F1[1:k]
}
for (k in 1:length(PDF1)){
print(k)
PDF1[1:k]==F1[1:k]
}
length(PDF1)
size(PDF1)
dim(PDF1)
for (k in 1:25){
print(k)
PDF1[1:k]==F1[1:k]
}
for (k in 1:25){
print(k)
print(PDF1[1:k]==F1[1:k])
}
identical(PDF1,F1)
for (k in 1:25){
print(k)
print(identical(PDF1[1:k]==F1[1:k]))
}
for (k in 1:25){
print(k)
print(identical(PDF1[1:k],F1[1:k]))
}
PDF1[1:k]
install.packages("stringr")
install.packages("stringr")
library(stringr)
?substring
for (k in 1:25){
print(k)
print(identical(substring(PDF1,1,k),substring(F1,1,k)))
}
for (k in 1:str_length(PDF1)){
print(k)
print(identical(substring(PDF1,1,k),substring(F1,1,k)))
}
PDF1 = c("Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
F1 = c("Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
for (k in 1:str_length(PDF1)){
print(k)
print(identical(substring(PDF1,1,k),substring(F1,1,k)))
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(paste0(p3,split_a[1]))
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
print(i)
print(paste0(p3,split_a[1]))
}
}
bib_df$FILE[15]
file.exist(F1)
file.exists(F1)
file.exists(PDF1)
file.exists("D:\Dropbox (INMACOSY)\Biblio\2015\Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
file.exists("D:/Dropbox (INMACOSY)/Biblio/2015/Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont")
file.exists("D:/Dropbox (INMACOSY)/Biblio/2015/Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont.PDF")
file.exists("D:/Dropbox (INMACOSY)/Biblio/2015/Quenon et al. - 2015 - Investigating Associative Learning Effects in Patients with Prodromal Alzheimer’s Disease Using the Temporal Cont.pdf")
