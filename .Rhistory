# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(cat(bib_df[i,]$AUTHOR[[1]],sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
a=bib_df$AUTHOR
a
bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF
b <- bib_df$AUTHOR
b
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry, Jean-Jacques\\_\\_")## set name of owner in bold
# bib_df$AUTHOR<-stri_replace_all_regex(bib_df$AUTHOR, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(bib_df[i,]$AUTHOR[[1]], " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
bib_df[i,]$AUTHOR[[1]]
a
b
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
auteurs<-stri_replace_all_regex(auteurs, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(cat(bib_df[i,]$AUTHOR[[1]],sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
auteurs
auteurs[1,]
auteurs[1]
eval(auteurs[1])
allo=auteurs[1]
substring(allo,4,str_length(allo)-2)
substring(allo,4,stri_length(allo)-2)
?gsub
strsplit(auteurs,',')
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
auteurs<-stri_replace_all_regex(auteurs, "[\\{\\}]", "")
auteurs <- substring(auteurs,4,str_length(auteurs)-2)
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
auteurs<-stri_replace_all_regex(auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
auteurs<-stri_replace_all_regex(auteurs, "[\\{\\}]", "")
auteurs <- substring(auteurs,4,stri_length(auteurs)-2)
bib_df$AUTHOR = strsplit(auteurs,",")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(cat(bib_df[i,]$AUTHOR[[1]],sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
bib_df<-bib2df(file="MyPub.bib")
auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs
auteurs
auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs
Aut = bib_df[1,]$AUTHOR;
length(Aut)
Aut
dim(Aut
)
size(Aut)
length(Aut[1,])
length(Aut[,1])
length(Aut[])
bib_df<-bib2df(file="MyPub.bib")
Aut
bib_df<-bib2df(file="MyPub.bib")
Aut = bib_df[1,]$AUTHOR;
Aut
bib_df$AUTHOR
bib_df$AUTHOR[1,4]
bib_df[1,]$AUTHOR
bib_df[1,]$AUTHOR[4]
bib_df[1,]$AUTHOR[2]
bib_df[1,]$AUTHOR
Aut<-bib_df[1,]$AUTHOR
Aut[,]
Aut[]
stri_length(Aut)
auteurs<-stri_replace_all_regex(Aut,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
auteurs
gsub("\\{\\\\\`\\{e\\}\\}","è",Aut)
Aut
eval(Aut)
eval(gsub("\\{\\\\\`\\{e\\}\\}","è",Aut))
?gsub
bib_df[i,]$AUTHOR[[1]]
length(bib_df[i,]$AUTHOR[[1]])
Aut = bib_df[i,]$AUTHOR[[1]];
Aut
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
# auteurs<-stri_replace_all_regex(auteurs, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
Aut = bib_df[i,]$AUTHOR[[1]];
for (j in 1:length(Aut)){
Auteurs <- Aut[j]
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
Auteurs<-stri_replace_all_regex(Auteurs, "[\\{\\}]", "")
Aut[j]<-Auteurs
}
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(cat(bib_df[i,]$AUTHOR[[1]],sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
# auteurs<-stri_replace_all_regex(bib_df$AUTHOR,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
# auteurs<-stri_replace_all_regex(auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
# auteurs<-stri_replace_all_regex(auteurs, "[\\{\\}]", "")
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
for(i in 1:dims[1]){
Aut = bib_df[i,]$AUTHOR[[1]];
for (j in 1:length(Aut)){
Auteurs <- Aut[j]
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
Auteurs<-stri_replace_all_regex(Auteurs, "[\\{\\}]", "")
Aut[j]<-Auteurs
}
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
cat(c("\n"))
cat(c(cat(Aut,sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
Y0 <- bib_df[1,]$YEAR
Y0
cat(c("##",Y0))
source('~/website/HandleBibFile.R', encoding = 'UTF-8')
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
#### if no match was found, try to find the filename that closely ressembles the given filename
FileList <- list.files(p3);# list all files in teh directory where we look for the file.
FileNumber <- agrep(split_a[1],FileList)
FileName <-FileList[FileNumber]
if(file.exists(paste0(c(p3,FileName),collapse=""))){
file.copy(from = file.path(p3,FileName), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}
else{
print(i)
print(FileName)}
}
}
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
bib_df$FILE<-stri_replace_all_regex(bib_df$FILE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
p<-c("D:/Dropbox (INMACOSY)/Biblio/" )
p2<-c("C:/Users/u0099946/Documents/website/PubFile/")
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile")
for(i in 1:dims[1]){
# create file name from DOI
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
# find original file
a<-bib_df$FILE[i]
split_a1<-unlist(strsplit(a,"/"))
split_a<-unlist(strsplit(split_a1[length(split_a1)],":"))
p3<-paste0(c(p,bib_df[i,]$YEAR,"/"),collapse="")
bib_df$FILE[i]<-paste0(c(p3,split_a[1]),collapse="")
if(file.exists(bib_df$FILE[i])){
file.copy(from = file.path(p3,split_a[1]), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}else{
#### if no match was found, try to find the filename that closely ressembles the given filename
FileList <- list.files(p3);# list all files in teh directory where we look for the file.
FileNumber <- agrep(split_a[1],FileList)
FileName <-FileList[FileNumber]
if(file.exists(paste0(c(p3,FileName),collapse=""))){
file.copy(from = file.path(p3,FileName), to = file.path(p2, paste0(c(b,".pdf"),collapse="")),overwrite = TRUE)
}
else{
print(i)
print(FileName)}
}
}
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache=TRUE)
library(bib2df)
bib_df<-bib2df(file="MyPub.bib")
library(stringi)
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE, "[\\{\\}]", "")
bib_df$JOURNAL<-stri_replace_all_regex(bib_df$JOURNAL, "[\\{\\}]", "")
bib_df$TITLE<-stri_replace_all_regex(bib_df$TITLE,"â€\\“", "-")## replacing latex character by UTF character
# sort bib_df by year
bib_df<-bib_df[order(bib_df$YEAR, decreasing=T),]
dims<-dim(bib_df)
pg = c("https://github.com/jjodx/jjodx.github.io/raw/master/PubFile/")
Y0 <- bib_df[1,]$YEAR
cat(c("##",Y0 ))
for(i in 1:dims[1]){
if (bib_df[i,]$YEAR!=Y0){Y0<-bib_df[i,]$YEAR;cat(c("##",Y0));cat(c("\n"))}
Aut = bib_df[i,]$AUTHOR[[1]];
for (j in 1:length(Aut)){
Auteurs <- Aut[j]
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\`\\{e\\}\\}", "è")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\'\\{e\\}\\}", "é")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\"\\{u\\}\\}", "ü")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"\\{\\\\\\^\\{i\\}\\}", "î")## replacing latex character by UTF character
Auteurs<-stri_replace_all_regex(Auteurs,"Orban de Xivry\\}, Jean-Jacques", "\\_\\_Orban de Xivry,Jean-Jacques\\_\\_")## set name of owner in bold
Auteurs<-stri_replace_all_regex(Auteurs, "[\\{\\}]", "")
Aut[j]<-Auteurs
}
b<-bib_df[i,]$DOI
b<-gsub("\\.", "_", b)
b<-gsub("/", "-", b)
b <- paste0(b,".pdf",collapse="")
a<-bib_df$FILE[i]
split_a<-unlist(strsplit(a,":"))
file_path<-paste0(pg,b,collapse="")
cat(c("####",bib_df[i,]$TITLE)) #title
if (is.na(bib_df[i,]$VOLUME)){bib_df[i,]$VOLUME=""}
if (is.na(bib_df[i,]$PAGES)){bib_df[i,]$PAGES=""}
cat(c("\n"))
cat(c(cat(Aut,sep=", "), " (",
bib_df[i,]$YEAR, "). [",
bib_df[i,]$TITLE, "](http://dx.doi.org/",
bib_df[i,]$DOI,
"). *",
bib_df[i,]$JOURNAL, ", ",
bib_df[i,]$VOLUME, "*, ",
bib_df[i,]$PAGES, ".",
"DOI: ",
bib_df[i,]$DOI), sep="")
if(is.na(a)==FALSE){
cat(c(" ", " [pdf](",file_path,")"), sep="")
get_data <- bib_df[i,]$NOTE
if(is.na(get_data)==FALSE){
cat(c(" | ", get_data), sep="")
}
}
cat(c("\n"))
cat(c("\n"))
}
